service:
  name: currence-backend
  profile: currence-admin
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

functions:
  signin:
    handler: ./functions/auth/index.signin
    description: Submit alias and password, return auth token
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: signin
          request:
            passThrough: WHEN_NO_TEMPLATES
  getUser:
    handler: ./functions/util/user.getUser
    description: Gets user
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: getUser
          request:
            passThrough: WHEN_NO_TEMPLATES
  getFeed:
    handler: ./functions/feed/index.getFeed
    description: Gets feed of user
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: getFeed
          request:
            passThrough: WHEN_NO_TEMPLATES
  getStory:
    handler: ./functions/story/index.getStory
    description: Gets story of user
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: getStory
          request:
            passThrough: WHEN_NO_TEMPLATES
  getFollowers:
    handler: ./functions/followers/index.getFollowers
    description: Gets story of user
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: getFollowers
          request:
            passThrough: WHEN_NO_TEMPLATES
  getFollowing:
    handler: ./functions/following/index.getFollowing
    description: Gets story of user
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: getFollowing
          request:
            passThrough: WHEN_NO_TEMPLATES
  follow:
    handler: ./functions/follow/index.follow
    description: Follow a user.
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: follow
          request:
            passThrough: WHEN_NO_TEMPLATES
  unfollow:
    handler: ./functions/unfollow/index.unfollow
    description: Unfollow a user. 
    events:
      - http:
          method: post
          cors: true # <-- CORS!
          path: follow
          request:
            passThrough: WHEN_NO_TEMPLATES



  #signup
  # createStatus
